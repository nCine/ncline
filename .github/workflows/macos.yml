name: 'macOS'

env:
  DEPLOY_MESSAGE:
    "Push artifact from GitHub Actions build ${{ github.run_number }} with id ${{ github.run_id }}

     - ncline artifact from branch 'BRANCH_NAME' with commit id ${{ github.sha }}"
  DEPLOY_BRANCH: ncline-BRANCH_NAME-OS-COMPILER

on: [push, workflow_dispatch]

jobs:
  macOS:
    strategy:
      fail-fast: false
      matrix:
        os: [macOS-12, macOS-14]

    runs-on: ${{ matrix.os }}

    steps:
    - name: 'Checkout Code'
      uses: actions/checkout@v4

    - name: 'Unshallow Git Repository for Versioning'
      run: |
        git fetch --unshallow || true

    - name: 'CMake Configuration'
      run: |
        cmake -B ../ncline-build-Release -D CMAKE_BUILD_TYPE=Release

    - name: 'Make'
      run: |
        make -j2 -C ../ncline-build-Release

    - name: 'Package'
      run: |
        make package -C ../ncline-build-Release

    - name: 'Push Artifacts'
      env:
        PUBLIC_REPO_TOKEN: ${{ secrets.PUBLIC_REPO_TOKEN }}
      run: |
        git config --global user.email "actions@github.com"
        git config --global user.name "GitHub Actions"

        export BRANCH_NAME=$(git describe --tags --exact-match 2> /dev/null || git symbolic-ref -q --short HEAD || git rev-parse --short HEAD)
        export DEPLOY_MESSAGE=`sed 's/BRANCH_NAME/'"$BRANCH_NAME"'/' <<< "$DEPLOY_MESSAGE"`

        if [[ "${{ matrix.os }}" == "macOS-14" ]]; then
          export OS=macos14
        else
          export OS=macos12
        fi
        export CC=appleclang

        cd ..
        export DEPLOY_BRANCH=`echo $DEPLOY_BRANCH | sed 's/BRANCH_NAME/'"$BRANCH_NAME"'/'`
        export DEPLOY_BRANCH=`echo $DEPLOY_BRANCH | sed 's/OS/'"$OS"'/'`
        export DEPLOY_BRANCH=`echo $DEPLOY_BRANCH | sed 's/COMPILER/'"$CC"'/'`
        git clone https://$PUBLIC_REPO_TOKEN@github.com/$GITHUB_REPOSITORY-artifacts.git >/dev/null 2>&1
        cd ncline-artifacts

        git checkout $DEPLOY_BRANCH || git checkout --orphan $DEPLOY_BRANCH
        git reset
        git clean -f
        git rm * || true
        mv -f ../ncline-build-Release/*.tar.gz .
        git add *.tar.gz
        git commit --amend -m "$DEPLOY_MESSAGE" || git commit -m "$DEPLOY_MESSAGE"
        git push --force || git push --set-upstream origin $DEPLOY_BRANCH
